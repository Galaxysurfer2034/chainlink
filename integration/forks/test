#!/bin/bash

# set this directory as working directory
cd "$(dirname "$0")"
# import test helpers
source ./test_helpers

# build docker images, reset CL db
initial_setup

# Runs the first chain, where the ethlog contract is deployed
printf "\nSTARTING CHAIN 1\n"
# make sure chainlink has actually started receiving blocks from geth
search_chainlink_logs 'Received new head'
# broadcast contract creation transaction
create_contract
# wait for chainlink to get notified about transaction
search_chainlink_logs 'New run triggered by ethlog'
search_chainlink_logs 'Run cannot continue because it lacks sufficient confirmations'
# save log
mkdir -p logs
docker-compose logs chainlink > logs/chain_1.log
docker-compose logs geth > logs/geth.log
# tear down network before sufficient confirmations can be reached
docker-compose down
# assert that nothing has been uncled yet
assert_not_in_chainlink_logs 'presumably has been uncled'

# create 2nd chain that is longer than first chain. Job should be uncled, not run
printf "\nSTARTING CHAIN 2\n"
start_network
# 2nd chain should be younger than first, and so chainlink won't immediately save new heads
search_chainlink_logs 'Cannot save new head confirmation'
# when 2nd chain gets longer, chainlink resumes saving heads
search_chainlink_logs 'New head resuming run'
# will wait for head # to be 10 more than block # with contract creation
search_chainlink_logs 'Run cannot continue because it lacks sufficient confirmations services'
# should eventually abort running running job
search_chainlink_logs 'presumably has been uncled'
# save log
mkdir -p logs
docker-compose logs chainlink > logs/chain_2.log
docker-compose logs geth >> logs/geth.log
# tear down
docker-compose down
assert_not_in_chainlink_logs 'All tasks complete for run'

echo "test passed!"
