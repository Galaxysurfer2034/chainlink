version: 2
jobs:
  go-postgres:
    docker:
    - image: smartcontract/builder:1.0.25
    - image: circleci/postgres:11-alpine
      environment:
        POSTGRES_USER: circleci_postgres
        POSTGRES_DB: circleci_test
    environment:
    - DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
    - run:
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
        paths:
        - /usr/local/share/.cache/yarn
    - restore_cache:
        name: Restore Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
    - run:
        command: go mod download
    - save_cache:
        name: Save Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
    - run:
        command: yarn workspace chainlinkv0.5 run setup
    - run:
        command: yarn workspace chainlink run setup
    - run:
        command: go test -p 3 -parallel 2 ./...
  build-chainlink:
    machine: true
    steps:
    - checkout
    - run:
        name: Docker login
        command: |
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
    - run:
        name: Docker build
        command: |
          DOCKER_TAG=circleci make docker
  json-api-client:
    docker:
    - image: smartcontract/builder:1.0.25
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
    - run:
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
        paths:
        - /usr/local/share/.cache/yarn
    - run:
        command: yarn workspace @chainlink/json-api-client
    - store_artifacts:
        path: ./integration/logs
  geth-postgres:
    resource_class: xlarge
    docker:
    - image: smartcontract/builder:1.0.25
      environment:
        TYPEORM_NAME: ci
        TYPEORM_HOST: explorerdb
    - image: circleci/postgres:11
      environment:
        POSTGRES_USER: circleci_postgres
        POSTGRES_DB: circleci_test
        POSTGRES_INITDB_ARGS: --lc-collate=C --lc-ctype=C
    - image: circleci/postgres:11
      name: explorerdb
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: explorer_test
        POSTGRES_INITDB_ARGS: --lc-collate=C --lc-ctype=C
    environment:
    - DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
    - save_cache:
        name: Save Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
    - run:
        command: ./tools/ci/ethereum_test
    - store_artifacts:
        path: ./integration/cypress/screenshots
    - store_artifacts:
        path: ./integration/logs
  rust:
    docker:
    - image: smartcontract/builder:1.0.25
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
    - save_cache:
        name: Save Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
    - run:
        command: ./tools/ci/rust_test
  parity-postgres:
    resource_class: xlarge
    docker:
    - image: smartcontract/builder:1.0.25
      environment:
        TYPEORM_NAME: ci
        TYPEORM_HOST: explorerdb
    - image: circleci/postgres:11-alpine
      environment:
        POSTGRES_USER: circleci_postgres
        POSTGRES_DB: circleci_test
    - image: circleci/postgres:11-alpine
      name: explorerdb
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: explorer_test
    - image: smartcontract/devnet:latest
    environment:
    - DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    - ETH_WS_PORT: 8546
    - ETH_HTTP_PORT: 8545
    - MIN_OUTGOING_CONFIRMATIONS: 1
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
    - save_cache:
        name: Save Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
    - run:
        command: ./tools/ci/ethereum_test parity
    - store_artifacts:
        path: ./integration/cypress/screenshots
    - store_artifacts:
        path: ./integration/logs
  truffle:
    resource_class: large
    docker:
    - image: smartcontract/builder:1.0.25
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
    - run:
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
        paths:
        - /usr/local/share/.cache/yarn
    - run:
        command: pip3 install -r requirements.txt
    - run:
        command: ./tools/ci/truffle_test
    - store_artifacts:
        path: ./integration/logs
  forks:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: ~/chainlink
    steps:
    - checkout
    - run:
        name: Install Yarn
        command: npm install -g yarn
    - run:
        name: Install New Packages
        command: yarn install
    - run:
        command: ./tools/ci/forks_test
    - store_artifacts:
        path: ./integration/forks/logs
  explorer:
    working_directory: ~/chainlink
    docker:
    - image: circleci/node:10-browsers
      environment:
        TYPEORM_NAME: ci
    - image: circleci/postgres:11-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: explorer_test
    steps:
    - checkout:
        path: ~/chainlink
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}-node:10-browsers
    - run:
        name: Install New Packages
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}-node:10-browsers
        paths:
        - ~/.cache/yarn
        - /usr/local/share/.cache/yarn
    - run:
        name: Run Lint
        command: yarn workspace @chainlink/explorer run lint
    - run:
        command: yarn workspace @chainlink/explorer run test:migration:run
    - run:
        name: Run Server Tests
        command: yarn workspace @chainlink/explorer run test-ci:silent
    - run:
        name: Run Client Tests
        command: yarn workspace @chainlink/explorer-client run test-ci:silent
    - store_artifacts:
        path: ./integration/logs
  operator-ui:
    docker:
    - image: smartcontract/builder:1.0.25
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
    - run:
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
        paths:
        - /usr/local/share/.cache/yarn
    - run:
        command: ./tools/ci/init_gcloud
    - run:
        command: ./tools/ci/operator_ui_test
    - store_artifacts:
        path: ./integration/logs
  reportcoverage:
    docker:
    - image: smartcontract/builder:1.0.25
    steps:
    - checkout
    - run:
        command: ./tools/ci/init_gcloud
    - run:
        command: ./tools/ci/report_coverage
  prepublish_npm:
    resource_class: large
    docker:
    - image: smartcontract/builder:1.0.25
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
    - run:
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
        paths:
        - /usr/local/share/.cache/yarn
    - run:
        command: ./tools/ci/prepublish_npm_test
  go-sqlite:
    docker:
    - image: smartcontract/builder:1.0.25
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
    - run:
        command: go mod download
    - save_cache:
        name: Save Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
    - run:
        command: ./tools/ci/init_gcloud
    - run:
        command: ./tools/ci/go_test | tee /tmp/go_test.txt
    - store_artifacts:
        path: /tmp/go_test.txt
  go-sqlite-race:
    resource_class: large
    docker:
    - image: smartcontract/builder:1.0.25
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
    - save_cache:
        name: Save Go Vendor Cache
        key: go-mod-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
    - run:
        command: ./tools/ci/gorace_test | tee /tmp/gorace_test.txt
    - store_artifacts:
        path: /tmp/gorace_test.txt
  build-publish-explorer:
    machine: true
    steps:
    - checkout
    - run:
        name: Docker login
        command: |
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
    - run:
        name: Docker build
        command: docker build -f explorer/Dockerfile -t smartcontract/explorer:circleci .
    - run:
        name: Docker push, if applicable
        command: |
          tools/ci/push_explorer "${CIRCLE_BRANCH}" "${CIRCLE_TAG}"
  build-publish-chainlink:
    machine: true
    steps:
    - checkout
    - run:
        name: Docker login
        command: |
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
    - run:
        name: Docker build
        command: |
          DOCKER_TAG=circleci make docker
    - run:
        name: Docker push, if applicable
        command: |
          tools/ci/push_chainlink "${CIRCLE_BRANCH}" "${CIRCLE_TAG}"
  build-explorer:
    machine: true
    steps:
    - checkout
    - run:
        name: Docker login
        command: |
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
    - run:
        name: Docker build
        command: docker build -f explorer/Dockerfile -t smartcontract/explorer:circleci .
workflows:
  version: 2
  test:
    jobs:
    - go-sqlite:
        filters:
          tags:
            only: /^v.*/
    - go-sqlite-race:
        filters:
          tags:
            only: /^v.*/
    - go-postgres:
        filters:
          tags:
            only: /^v.*/
    - truffle:
        filters:
          tags:
            only: /^v.*/
    - geth-postgres:
        filters:
          tags:
            only: /^v.*/
    - parity-postgres:
        filters:
          tags:
            only: /^v.*/
    - json-api-client:
        filters:
          tags:
            only: /^v.*/
    - operator-ui:
        filters:
          tags:
            only: /^v.*/
    - rust:
        filters:
          tags:
            only: /^v.*/
    - explorer:
        filters:
          tags:
            only: /^explorer-v.*/
    - forks:
        filters:
          tags:
            only: /^v.*/
    - build-chainlink:
        filters:
          tags:
            only: /^v.*/
    - build-explorer:
        filters:
          tags:
            only: /^v.*/
    - prepublish_npm:
        filters:
          tags:
            only: /^v.*/
    - build-publish-explorer:
        filters:
          branches:
            only:
            - develop
            - /^release\/.*/
          tags:
            only: /^explorer-v.*/
        requires:
        - explorer
    - build-publish-chainlink:
        filters:
          branches:
            only:
            - develop
            - /^release\/.*/
          tags:
            only: /^v.*/
        requires:
        - go-sqlite
        - go-postgres
        - truffle
        - geth-postgres
        - parity-postgres
        - json-api-client
        - operator-ui
        - rust
    - reportcoverage:
        requires:
        - go-sqlite
        - go-postgres
        - truffle
        - operator-ui
        - rust
        - explorer
