#!/usr/bin/env node
(async () => {
  // imports
  const ethers = require('ethers')
  const { utils } = ethers

  // ensure correct CLI ussage
  if (process.argv.length < 3) {
    console.error('Usage: ./transfer_owner <owned address> <recipient address>')
    process.exit(1)
  }
  const owned = process.argv[2]
  const recipient = process.argv[3]

  // Setup JSON RPC provider
  const providerURL = process.env['ETH_HTTP_URL'] || 'http://localhost:18545'
  const privateKey =
    process.env['PRIVATE_KEY'] ||
    '4d6cf3ce1ac71e79aa33cf481dedf2e73acb548b1294a70447c960784302d2fb'
  const provider = new ethers.providers.JsonRpcProvider(providerURL)
  const wallet = new ethers.Wallet(privateKey, provider)

  // encode function call
  const funcSelector = '0xf2fde38b' // "transferOwnership(address)"
  const encodedParams = utils.defaultAbiCoder.encode(['address'], [recipient])
  const data = utils.hexlify(utils.concat([funcSelector, encodedParams]))

  // send transaction
  const tx = {
    data,
    to: owned
  }

  try {
    // send tx
    const txHash = (await wallet.sendTransaction(tx)).hash
    // wait for tx to be mined
    await provider.waitForTransaction(txHash)
    // get tx receipt
    const receipt = await provider.getTransactionReceipt(txHash)
    console.log(receipt)
    console.log(`ownership of ${owned} transferred to ${recipient}`)
  } catch (error) {
    console.log(error)
  }
})()
