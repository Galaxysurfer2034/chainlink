// truffle script

const { utils } = require('ethers')
const commandLineArgs = require('command-line-args')
const { wallet, provider } = require('../chainlink.config')

  // ensure correct CLI ussage
  if (process.argv.length < 2) {
    console.error('Usage: ./request_eth_price <contract address>')
    process.exit(1)
  }
  const consumer = process.argv[2]

const USAGE =
  'truffle exec scripts/request_eth_price.js [options] <contract address>'

const main = async () => {
  // parse command line args
  const options = commandLineArgs(optionDefinitions)
  let [consumer] = options.args.slice(2)
  // encode function call
  const funcSelector = '0x6c0cae68' // "requestEthereumPrice(string)",
  const encodedParams = utils.defaultAbiCoder.encode(['string'], ['USD'])
  const data = utils.hexlify(utils.concat([funcSelector, encodedParams]))

  // send transaction
  const tx = {
    data,
    to: consumer
  }
  // send tx
  const txHash = (await wallet.sendTransaction(tx)).hash
  // wait for tx to be mined
  await provider.waitForTransaction(txHash)
  // get tx receipt
  const receipt = await provider.getTransactionReceipt(txHash)
  console.log(receipt)
  if (receipt.logs.length) {
    console.log(receipt.logs[3].topics)
    console.log(`price successfully requested`)
  } else {
    throw('FAILED!!!')
  }
}

module.exports = async callback => {
  try {
    await main()
    callback()
  } catch (error) {
    console.error(`Usage: ${USAGE}`)
    callback(error)
  }
})()
